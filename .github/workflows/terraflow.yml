name: Terraform Infrastructure Deployment

on:
  push:
    branches:
      - main
      - release
      - "**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environnement à déployer"
        required: true
        default: "rec"
        type: choice
        options:
          - rec
          - ppr
          - prd

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prd' || github.ref == 'refs/heads/release' && 'ppr' || 'rec' }}

    env:
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZ_SUBID}}
      ARM_TENANT_ID: ${{secrets.AZ_TENANTID}}
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prd' || github.ref == 'refs/heads/release' && 'ppr' || 'rec' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"

      - name: LS ENV
        run: |
          cd ./terraform/$ENVIRONMENT
          ls -l

      - name: Terraform Init
        run: |
          cd ./terraform/$ENVIRONMENT
          terraform init

      - name: Terraform Plan
        run: |
          cd ./terraform/$ENVIRONMENT
          terraform plan -out=tfplan
        continue-on-error: true

      - name: Terraform Apply (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          cd ./terraform/$ENVIRONMENT
          terraform apply -auto-approve tfplan
        continue-on-error: true

      - name: Terraform Apply (Non-Prod)
        if: github.ref != 'refs/heads/main'
        run: |
          cd ./terraform/$ENVIRONMENT
          terraform apply -auto-approve tfplan
