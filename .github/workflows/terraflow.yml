name: Terraform Infrastructure Deployment

on:
  push:
    branches:
      - main
      - release
      - "**"
  workflow_dispatch:

# Ajout des permissions nécessaires
permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-batch:
    runs-on: ubuntu-latest
    # Définissez l'environnement en premier
    environment: ${{ github.ref == 'refs/heads/main' && 'prd' || github.ref == 'refs/heads/release' && 'ppr' || 'rec' }}

    env:
      BATCH_NAME: test
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prd' || github.ref == 'refs/heads/release' && 'ppr' || 'rec' }}

    steps:
      - uses: actions/checkout@v4

      # Déterminer l'URL ACR en fonction de l'environnement
      - name: Set ACR URL based on environment
        id: set-acr-url
        run: |
          if [ "$ENVIRONMENT" = "prd" ]; then
            echo "ACR_URL=${{ secrets.AZURE_CONTAINER_REGISTRY_URL_PRD }}" >> $GITHUB_ENV
          elif [ "$ENVIRONMENT" = "ppr" ]; then
            echo "ACR_URL=${{ secrets.AZURE_CONTAINER_REGISTRY_URL_PPR }}" >> $GITHUB_ENV
          else
            echo "ACR_URL=${{ secrets.AZURE_CONTAINER_REGISTRY_URL_REC }}" >> $GITHUB_ENV
          fi

      # Option 1: Utilisez directement les variables d'environnement définies pour l'authentification Azure
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.TF_ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.AZ_TENANTID }}
          subscription-id: ${{ secrets.AZ_SUBID }}
          enable-AzPSSession: true
          auth-type: service-principal

      - name: Verify Azure connection
        run: |
          az account show
          echo "Successfully connected to Azure"

      # Option 2: Utilisez az acr login pour vous connecter à ACR après l'authentification Azure
      - name: Log in to ACR
        run: |
          # Extraire le nom de l'ACR de l'URL (enlever .azurecr.io)
          ACR_NAME=$(echo $ACR_URL | cut -d'.' -f1)
          az acr login --name $ACR_NAME

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./batch_${{ env.BATCH_NAME }}
          push: true
          tags: |
            ${{ env.ACR_URL }}/batch-${{ env.BATCH_NAME }}:${{ env.ENVIRONMENT }}
            ${{ env.ACR_URL }}/batch-${{ env.BATCH_NAME }}:${{ env.ENVIRONMENT }}-${{ github.sha }}
          file: ./batch_${{ env.BATCH_NAME }}/Dockerfile
